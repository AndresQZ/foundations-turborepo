import typescript from 'rollup-plugin-typescript2';
import resolve from '@rollup/plugin-node-resolve';
import commonjs from '@rollup/plugin-commonjs';
import { terser } from 'rollup-plugin-terser';
import copy from 'rollup-plugin-copy';


export default {
  input: {
    clients: 'src/index.ts',
    internal: 'src/internal/internal.ts',
  },
  output: [
    {
      dir: 'dist/esm',
      format: 'esm',
      exports: 'named',
      sourcemap: false,
    },
    {
      dir: 'dist/cjs',
      format: 'cjs',
      exports: 'named',
      sourcemap: false,
    },
    // {
    //   file: 'dist/bundle.umd.js',
    //   format: 'umd',
    //   name: 'coreLibrary',
    //   exports: 'named',
    //   sourcemap: true,
    // },
  ],
  plugins: [
    resolve(),
    commonjs(),
    typescript({
      tsconfig: 'tsconfig.json',
      tsconfigOverride: {
        compilerOptions: {
          declaration: true,
          declarationDir: './dist/types',
        },
        exclude: ['./test', './examples'],
      },
      useTsconfigDeclarationDir: true,
    }),
    terser(),
    copy({
      targets: [
        { src: 'dist/types/**/*.d.ts', dest: 'dist/all', rename: 'types.d.ts'}
      ]
    }),
  ],
};
